<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pytorch on Shashank Prasanna</title><link>/tags/pytorch/</link><description>Recent content in Pytorch on Shashank Prasanna</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 08 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/pytorch/index.xml" rel="self" type="application/rss+xml"/><item><title>Benchmarking Modular MojoðŸ”¥ and PyTorch torch.compile() on Mandelbrot function</title><link>/benchmarking-modular-mojo-and-pytorch-torch.compile-on-mandelbrot-function/</link><pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate><guid>/benchmarking-modular-mojo-and-pytorch-torch.compile-on-mandelbrot-function/</guid><description>&lt;p>Last week, Modular - an startup co-founded by Chris Lattner (of LLVM, Swift, MLIR fame), announced a brand new high-performance language called MojoðŸ”¥. MojoðŸ”¥ looks and reads like Python but that&amp;rsquo;s only on the surface, underneath the familiar Python syntax Mojo uses it&amp;rsquo;s own JIT and AOT compilation process to accelerate Python code. Although Mojo doesn&amp;rsquo;t fully support all of Python today, according to Mojo docs, over time Mojo is expected to become a superset of Python.
&lt;figure class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 410px">
&lt;img class="card-img-top" src="/benchmarking-modular-mojo-and-pytorch-torch.compile-on-mandelbrot-function/featured-background_hu_4d82b718f6caf1c3.png" width="400" height="285">
&lt;figcaption class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">


PyTorch's got some MojoðŸ”¥

&lt;/p></description></item><item><title>How Pytorch 2.0 accelerates deep learning with operator fusion and CPU/GPU code-generation</title><link>/how-pytorch-2.0-accelerates-deep-learning-with-operator-fusion-and-cpu/gpu-code-generation/</link><pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate><guid>/how-pytorch-2.0-accelerates-deep-learning-with-operator-fusion-and-cpu/gpu-code-generation/</guid><description>&lt;p>Computer programming is magical. We write code in human readable languages, and as though by magic, it gets translated into electric currents through silicon transistors making them behave like switches and allowing them to implement complex logic â€” just so we can enjoy cat videos on the internet. Between the programming language and hardware processors that run it, is an important piece of technology â€” the compiler. A compilerâ€™s job is to translate and simplify our human readable language code into instructions that a processor understands.&lt;/p></description></item></channel></rss>